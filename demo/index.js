!function(N){function Q(Q){for(var F,U,B=Q[0],A=Q[1],E=Q[2],V=0,R=[];V<B.length;V++)U=B[V],L[U]&&R.push(L[U][0]),L[U]=0;for(F in A)Object.prototype.hasOwnProperty.call(A,F)&&(N[F]=A[F]);for(n&&n(Q);R.length;)R.shift()();return l.push.apply(l,E||[]),s()}function s(){for(var Q,F=0;F<l.length;F++){for(var U=l[F],B=!0,A=1;A<U.length;A++){var E=U[A];0!==L[E]&&(B=!1)}B&&(l.splice(F--,1),Q=V(V.s=U[0]))}return Q}var U={},L={index:0},l=[];function V(Q){if(U[Q])return U[Q].exports;var F=U[Q]={i:Q,l:!1,exports:{}};return N[Q].call(F.exports,F,F.exports,V),F.l=!0,F.exports}V.m=N,V.c=U,V.d=function(Q,F,U){V.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},V.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},V.t=function(F,Q){if(1&Q&&(F=V(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(V.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var B in F)V.d(U,B,function(Q){return F[Q]}.bind(null,B));return U},V.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return V.d(F,"a",F),F},V.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},V.p="";var F=window.webpackJsonp=window.webpackJsonp||[],B=F.push.bind(F);F.push=Q,F=F.slice();for(var A=0;A<F.length;A++)Q(F[A]);var n=B;l.push(["./example/index.js","common"]),s()}({"./ReactNumber.min.js":
/*!****************************!*\
  !*** ./ReactNumber.min.js ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n!function (A, o) {\n  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = o() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (o),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, function () {\n  return function (A) {\n    var o = {};\n\n    function E(B) {\n      if (o[B]) return o[B].exports;\n      var M = o[B] = {\n        i: B,\n        l: !1,\n        exports: {}\n      };\n      return A[B].call(M.exports, M, M.exports, E), M.l = !0, M.exports;\n    }\n\n    return E.m = A, E.c = o, E.d = function (A, o, B) {\n      E.o(A, o) || Object.defineProperty(A, o, {\n        enumerable: !0,\n        get: B\n      });\n    }, E.r = function (A) {\n      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(A, Symbol.toStringTag, {\n        value: "Module"\n      }), Object.defineProperty(A, "__esModule", {\n        value: !0\n      });\n    }, E.t = function (A, o) {\n      if (1 & o && (A = E(A)), 8 & o) return A;\n      if (4 & o && "object" == _typeof(A) && A && A.__esModule) return A;\n      var B = Object.create(null);\n      if (E.r(B), Object.defineProperty(B, "default", {\n        enumerable: !0,\n        value: A\n      }), 2 & o && "string" != typeof A) for (var M in A) {\n        E.d(B, M, function (o) {\n          return A[o];\n        }.bind(null, M));\n      }\n      return B;\n    }, E.n = function (A) {\n      var o = A && A.__esModule ? function () {\n        return A.default;\n      } : function () {\n        return A;\n      };\n      return E.d(o, "a", o), o;\n    }, E.o = function (A, o) {\n      return Object.prototype.hasOwnProperty.call(A, o);\n    }, E.p = "", E(E.s = 1);\n  }([function (A, o, E) {\n    "use strict";\n\n    A.exports = E(2);\n  }, function (A, o, E) {\n    "use strict";\n\n    E.r(o);\n    var B = E(0),\n        M = E.n(B);\n\n    function e(A) {\n      return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (A) {\n        return _typeof(A);\n      } : function (A) {\n        return A && "function" == typeof Symbol && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : _typeof(A);\n      })(A);\n    }\n\n    function I(A, o) {\n      for (var E = 0; E < o.length; E++) {\n        var B = o[E];\n        B.enumerable = B.enumerable || !1, B.configurable = !0, "value" in B && (B.writable = !0), Object.defineProperty(A, B.key, B);\n      }\n    }\n\n    function t(A) {\n      return (t = Object.setPrototypeOf ? Object.getPrototypeOf : function (A) {\n        return A.__proto__ || Object.getPrototypeOf(A);\n      })(A);\n    }\n\n    function Q(A, o) {\n      return (Q = Object.setPrototypeOf || function (A, o) {\n        return A.__proto__ = o, A;\n      })(A, o);\n    }\n\n    function n(A) {\n      if (void 0 === A) throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n      return A;\n    }\n\n    function r(A, o, E) {\n      return o in A ? Object.defineProperty(A, o, {\n        value: E,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : A[o] = E, A;\n    }\n\n    E(4);\n\n    var w = function (A) {\n      function o() {\n        var A, E;\n        return function (A, E) {\n          if (!(A instanceof o)) throw new TypeError("Cannot call a class as a function");\n        }(this), this, E = t(o).call(this), r(n(n(A = !E || "object" !== e(E) && "function" != typeof E ? n(this) : E)), "initState", function (o) {\n          var E = {\n            number: o = o || 0,\n            numberArray: A.numberToArray(o)\n          };\n          A.setState(E);\n        }), r(n(n(A)), "numberToArray", function (A) {\n          return -1 === (A = "" + A).indexOf(".") && (A = A.replace(/\\B(?=(\\d{3})+$)/g, ",")), A.split("");\n        }), r(n(n(A)), "addItem", function () {\n          for (var A = [], o = 0; o < 10; o++) {\n            A.push(M.a.createElement("span", {\n              className: "rn-num",\n              key: "num-".concat(o)\n            }, o));\n          }\n\n          return A;\n        }), A.state = {\n          number: 0,\n          numberArray: [],\n          numberState: []\n        }, A.uid = 0, A.positionId = ["g", "s", "b", "q", "w", "sw", "bw", "qw", "y", "sy", "by", "qy", "wy"], A;\n      }\n\n      var E, w;\n      return function (A, o) {\n        if ("function" != typeof o && null !== o) throw new TypeError("Super expression must either be null or a function");\n        A.prototype = Object.create(o && o.prototype, {\n          constructor: {\n            value: A,\n            writable: !0,\n            configurable: !0\n          }\n        }), o && Q(A, o);\n      }(o, B.Component), E = o, (w = [{\n        key: "componentDidMount",\n        value: function value() {\n          var A = this.props || {};\n          this.initState(A.number);\n        }\n      }, {\n        key: "componentWillReceiveProps",\n        value: function value(A) {\n          (this.props || {}).number !== A.number && this.initState(A.number);\n        }\n      }, {\n        key: "render",\n        value: function value() {\n          var A = this,\n              o = this.props || {},\n              E = this.state || {};\n          if (!("number" in o)) return "";\n          var B = E.numberArray,\n              e = B.length,\n              I = Math.floor(e / 4),\n              t = 0,\n              Q = this.positionId.slice(0, e - I);\n          return Q.reverse(), M.a.createElement("div", {\n            className: "rn-wrapper".concat(o.className ? " " + o.className : "")\n          }, B.map(function (E, B) {\n            var e,\n                I,\n                n = isNaN(parseInt(E)),\n                r = 10 * parseInt(E);\n            return I = n ? (t++, e = A.uid++, "," === E) : (e = Q[B - t], !1), M.a.createElement("div", {\n              className: "rn-item".concat(I ? o.showComma ? "" : " hide-comma" : ""),\n              key: "rn-item-".concat(e),\n              style: n ? null : {\n                transform: "translate(0, -".concat(r, "%)")\n              }\n            }, n ? M.a.createElement("span", {\n              className: "rn-num",\n              key: A.uid++\n            }, E) : A.addItem());\n          }));\n        }\n      }]) && I(E.prototype, w), o;\n    }();\n\n    o.default = w;\n  }, function (A, o, E) {\n    "use strict";\n    /** @license React v16.6.1\n     * react.production.min.js\n     *\n     * Copyright (c) Facebook, Inc. and its affiliates.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n\n    var B = E(3),\n        M = "function" == typeof Symbol && Symbol.for,\n        e = M ? Symbol.for("react.element") : 60103,\n        I = M ? Symbol.for("react.portal") : 60106,\n        t = M ? Symbol.for("react.fragment") : 60107,\n        Q = M ? Symbol.for("react.strict_mode") : 60108,\n        n = M ? Symbol.for("react.profiler") : 60114,\n        r = M ? Symbol.for("react.provider") : 60109,\n        w = M ? Symbol.for("react.context") : 60110,\n        c = M ? Symbol.for("react.concurrent_mode") : 60111,\n        f = M ? Symbol.for("react.forward_ref") : 60112,\n        D = M ? Symbol.for("react.suspense") : 60113,\n        F = M ? Symbol.for("react.memo") : 60115,\n        C = M ? Symbol.for("react.lazy") : 60116,\n        i = "function" == typeof Symbol && Symbol.iterator;\n\n    function s(A) {\n      for (var o = arguments.length - 1, E = "https://reactjs.org/docs/error-decoder.html?invariant=" + A, B = 0; B < o; B++) {\n        E += "&args[]=" + encodeURIComponent(arguments[B + 1]);\n      }\n\n      !function (A, o, E, B, M, e, I, t) {\n        if (!A) {\n          if ((A = void 0) === o) A = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {\n            var Q = [E, void 0, void 0, void 0, void 0, void 0],\n                n = 0;\n            (A = Error(o.replace(/%s/g, function () {\n              return Q[n++];\n            }))).name = "Invariant Violation";\n          }\n          throw A.framesToPop = 1, A;\n        }\n      }(!1, "Minified React error #" + A + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", E);\n    }\n\n    var g = {\n      isMounted: function isMounted() {\n        return !1;\n      },\n      enqueueForceUpdate: function enqueueForceUpdate() {},\n      enqueueReplaceState: function enqueueReplaceState() {},\n      enqueueSetState: function enqueueSetState() {}\n    },\n        a = {};\n\n    function N(A, o, E) {\n      this.props = A, this.context = o, this.refs = a, this.updater = E || g;\n    }\n\n    function R() {}\n\n    function v(A, o, E) {\n      this.props = A, this.context = o, this.refs = a, this.updater = E || g;\n    }\n\n    N.prototype.isReactComponent = {}, N.prototype.setState = function (A, o) {\n      "object" != _typeof(A) && "function" != typeof A && null != A && s("85"), this.updater.enqueueSetState(this, A, o, "setState");\n    }, N.prototype.forceUpdate = function (A) {\n      this.updater.enqueueForceUpdate(this, A, "forceUpdate");\n    }, R.prototype = N.prototype;\n    var h = v.prototype = new R();\n    h.constructor = v, B(h, N.prototype), h.isPureReactComponent = !0;\n    var y = {\n      current: null,\n      currentDispatcher: null\n    },\n        P = Object.prototype.hasOwnProperty,\n        j = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    };\n\n    function U(A, o, E) {\n      var B = void 0,\n          M = {},\n          I = null,\n          t = null;\n      if (null != o) for (B in void 0 !== o.ref && (t = o.ref), void 0 !== o.key && (I = "" + o.key), o) {\n        P.call(o, B) && !j.hasOwnProperty(B) && (M[B] = o[B]);\n      }\n      var Q = arguments.length - 2;\n      if (1 === Q) M.children = E;else if (1 < Q) {\n        for (var n = Array(Q), r = 0; r < Q; r++) {\n          n[r] = arguments[r + 2];\n        }\n\n        M.children = n;\n      }\n      if (A && A.defaultProps) for (B in Q = A.defaultProps) {\n        void 0 === M[B] && (M[B] = Q[B]);\n      }\n      return {\n        $$typeof: e,\n        type: A,\n        key: I,\n        ref: t,\n        props: M,\n        _owner: y.current\n      };\n    }\n\n    function u(A) {\n      return "object" == _typeof(A) && null !== A && A.$$typeof === e;\n    }\n\n    var Y = /\\/+/g,\n        l = [];\n\n    function S(A, o, E, B) {\n      if (l.length) {\n        var M = l.pop();\n        return M.result = A, M.keyPrefix = o, M.func = E, M.context = B, M.count = 0, M;\n      }\n\n      return {\n        result: A,\n        keyPrefix: o,\n        func: E,\n        context: B,\n        count: 0\n      };\n    }\n\n    function G(A) {\n      A.result = null, A.keyPrefix = null, A.func = null, A.context = null, A.count = 0, l.length < 10 && l.push(A);\n    }\n\n    function k(A, o, E) {\n      return null == A ? 0 : function A(o, E, B, M) {\n        var t = _typeof(o);\n\n        "undefined" !== t && "boolean" !== t || (o = null);\n        var Q = !1;\n        if (null === o) Q = !0;else switch (t) {\n          case "string":\n          case "number":\n            Q = !0;\n            break;\n\n          case "object":\n            switch (o.$$typeof) {\n              case e:\n              case I:\n                Q = !0;\n            }\n\n        }\n        if (Q) return B(M, o, "" === E ? "." + T(o, 0) : E), 1;\n        if (Q = 0, E = "" === E ? "." : E + ":", Array.isArray(o)) for (var n = 0; n < o.length; n++) {\n          var r = E + T(t = o[n], n);\n          Q += A(t, r, B, M);\n        } else if ("function" == typeof (r = null === o || "object" != _typeof(o) ? null : "function" == typeof (r = i && o[i] || o["@@iterator"]) ? r : null)) for (o = r.call(o), n = 0; !(t = o.next()).done;) {\n          Q += A(t = t.value, r = E + T(t, n++), B, M);\n        } else "object" === t && s("31", "[object Object]" == (B = "" + o) ? "object with keys {" + Object.keys(o).join(", ") + "}" : B, "");\n        return Q;\n      }(A, "", o, E);\n    }\n\n    function T(A, o) {\n      return "object" == _typeof(A) && null !== A && null != A.key ? (E = A.key, B = {\n        "=": "=0",\n        ":": "=2"\n      }, "$" + ("" + E).replace(/[=:]/g, function (A) {\n        return B[A];\n      })) : o.toString(36);\n      var E, B;\n    }\n\n    function H(A, o) {\n      A.func.call(A.context, o, A.count++);\n    }\n\n    function p(A, o, E) {\n      var B,\n          M,\n          I = A.result,\n          t = A.keyPrefix;\n      A = A.func.call(A.context, o, A.count++), Array.isArray(A) ? J(A, I, E, function (A) {\n        return A;\n      }) : null != A && (u(A) && (M = t + (!(B = A).key || o && o.key === A.key ? "" : ("" + A.key).replace(Y, "$&/") + "/") + E, A = {\n        $$typeof: e,\n        type: B.type,\n        key: M,\n        ref: B.ref,\n        props: B.props,\n        _owner: B._owner\n      }), I.push(A));\n    }\n\n    function J(A, o, E, B, M) {\n      var e = "";\n      null != E && (e = ("" + E).replace(Y, "$&/") + "/"), k(A, p, o = S(o, e, B, M)), G(o);\n    }\n\n    var x = {\n      Children: {\n        map: function map(A, o, E) {\n          if (null == A) return A;\n          var B = [];\n          return J(A, B, null, o, E), B;\n        },\n        forEach: function forEach(A, o, E) {\n          if (null == A) return A;\n          k(A, H, o = S(null, null, o, E)), G(o);\n        },\n        count: function count(A) {\n          return k(A, function () {\n            return null;\n          }, null);\n        },\n        toArray: function toArray(A) {\n          var o = [];\n          return J(A, o, null, function (A) {\n            return A;\n          }), o;\n        },\n        only: function only(A) {\n          return u(A) || s("143"), A;\n        }\n      },\n      createRef: function createRef() {\n        return {\n          current: null\n        };\n      },\n      Component: N,\n      PureComponent: v,\n      createContext: function createContext(A, o) {\n        return void 0 === o && (o = null), (A = {\n          $$typeof: w,\n          _calculateChangedBits: o,\n          _currentValue: A,\n          _currentValue2: A,\n          Provider: null,\n          Consumer: null\n        }).Provider = {\n          $$typeof: r,\n          _context: A\n        }, A.Consumer = A;\n      },\n      forwardRef: function forwardRef(A) {\n        return {\n          $$typeof: f,\n          render: A\n        };\n      },\n      lazy: function lazy(A) {\n        return {\n          $$typeof: C,\n          _ctor: A,\n          _status: -1,\n          _result: null\n        };\n      },\n      memo: function memo(A, o) {\n        return {\n          $$typeof: F,\n          type: A,\n          compare: void 0 === o ? null : o\n        };\n      },\n      Fragment: t,\n      StrictMode: Q,\n      Suspense: D,\n      createElement: U,\n      cloneElement: function cloneElement(A, o, E) {\n        null == A && s("267", A);\n        var M = void 0,\n            I = B({}, A.props),\n            t = A.key,\n            Q = A.ref,\n            n = A._owner;\n\n        if (null != o) {\n          void 0 !== o.ref && (Q = o.ref, n = y.current), void 0 !== o.key && (t = "" + o.key);\n          var r = void 0;\n\n          for (M in A.type && A.type.defaultProps && (r = A.type.defaultProps), o) {\n            P.call(o, M) && !j.hasOwnProperty(M) && (I[M] = void 0 === o[M] && void 0 !== r ? r[M] : o[M]);\n          }\n        }\n\n        if (1 == (M = arguments.length - 2)) I.children = E;else if (1 < M) {\n          r = Array(M);\n\n          for (var w = 0; w < M; w++) {\n            r[w] = arguments[w + 2];\n          }\n\n          I.children = r;\n        }\n        return {\n          $$typeof: e,\n          type: A.type,\n          key: t,\n          ref: Q,\n          props: I,\n          _owner: n\n        };\n      },\n      createFactory: function createFactory(A) {\n        var o = U.bind(null, A);\n        return o.type = A, o;\n      },\n      isValidElement: u,\n      version: "16.6.1",\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n        ReactCurrentOwner: y,\n        assign: B\n      }\n    };\n    x.unstable_ConcurrentMode = c, x.unstable_Profiler = n;\n    var d = x || {\n      default: x\n    };\n    A.exports = d.default || d;\n  }, function (A, o, E) {\n    "use strict";\n    /*\n    object-assign\n    (c) Sindre Sorhus\n    @license MIT\n    */\n\n    var B = Object.getOwnPropertySymbols,\n        M = Object.prototype.hasOwnProperty,\n        e = Object.prototype.propertyIsEnumerable;\n    A.exports = function () {\n      try {\n        if (!Object.assign) return !1;\n        var A = new String("abc");\n        if (A[5] = "de", "5" === Object.getOwnPropertyNames(A)[0]) return !1;\n\n        for (var o = {}, E = 0; E < 10; E++) {\n          o["_" + String.fromCharCode(E)] = E;\n        }\n\n        if ("0123456789" !== Object.getOwnPropertyNames(o).map(function (A) {\n          return o[A];\n        }).join("")) return !1;\n        var B = {};\n        return "abcdefghijklmnopqrst".split("").forEach(function (A) {\n          B[A] = A;\n        }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, B)).join("");\n      } catch (A) {\n        return !1;\n      }\n    }() ? Object.assign : function (A, o) {\n      for (var E, I, t = function (A) {\n        if (null == A) throw new TypeError("Object.assign cannot be called with null or undefined");\n        return Object(A);\n      }(A), Q = 1; Q < arguments.length; Q++) {\n        for (var n in E = Object(arguments[Q])) {\n          M.call(E, n) && (t[n] = E[n]);\n        }\n\n        if (B) {\n          I = B(E);\n\n          for (var r = 0; r < I.length; r++) {\n            e.call(E, I[r]) && (t[I[r]] = E[I[r]]);\n          }\n        }\n      }\n\n      return t;\n    };\n  }, function (A, o, E) {\n    var B = E(5);\n    "string" == typeof B && (B = [[A.i, B, ""]]);\n    E(7)(B, {\n      hmr: !0,\n      transform: void 0,\n      insertInto: void 0\n    }), B.locals && (A.exports = B.locals);\n  }, function (A, o, E) {\n    (A.exports = E(6)(!1)).push([A.i, "@font-face {\\n  font-family: \'dameron\';\\n  src: url(data:font/truetype;charset=utf-8;base64,) format(\'truetype\');\\n  font-style: normal;\\n}\\n.rn-wrapper {\\n  display: flex;\\n  align-items: flex-start;\\n  height: 60px;\\n  font-family: \'dameron\';\\n  font-size: 48px;\\n  overflow: hidden;\\n}\\n.rn-wrapper .rn-item {\\n  padding: 0 5px;\\n  color: red;\\n  height: 1000%;\\n  transform-origin: center top;\\n  transition: transform 0.3s ease-out;\\n}\\n.rn-wrapper .rn-item .rn-num {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 10%;\\n  text-align: center;\\n}\\n.rn-wrapper .rn-item.hide-comma {\\n  display: none;\\n}\\n", ""]);\n  }, function (A, o) {\n    A.exports = function (A) {\n      var o = [];\n      return o.toString = function () {\n        return this.map(function (o) {\n          var E = function (A, o) {\n            var E,\n                B = A[1] || "",\n                M = A[3];\n            if (!M) return B;\n\n            if (o && "function" == typeof btoa) {\n              var e = (E = M, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(E)))) + " */"),\n                  I = M.sources.map(function (A) {\n                return "/*# sourceURL=" + M.sourceRoot + A + " */";\n              });\n              return [B].concat(I).concat([e]).join("\\n");\n            }\n\n            return [B].join("\\n");\n          }(o, A);\n\n          return o[2] ? "@media " + o[2] + "{" + E + "}" : E;\n        }).join("");\n      }, o.i = function (A, E) {\n        "string" == typeof A && (A = [[null, A, ""]]);\n\n        for (var B = {}, M = 0; M < this.length; M++) {\n          var e = this[M][0];\n          "number" == typeof e && (B[e] = !0);\n        }\n\n        for (M = 0; M < A.length; M++) {\n          var I = A[M];\n          "number" == typeof I[0] && B[I[0]] || (E && !I[2] ? I[2] = E : E && (I[2] = "(" + I[2] + ") and (" + E + ")"), o.push(I));\n        }\n      }, o;\n    };\n  }, function (A, o, E) {\n    var B,\n        M,\n        e,\n        I = {},\n        t = (B = function B() {\n      return window && document && document.all && !window.atob;\n    }, function () {\n      return void 0 === M && (M = B.apply(this, arguments)), M;\n    }),\n        Q = (e = {}, function (A, o) {\n      if ("function" == typeof A) return A();\n\n      if (void 0 === e[A]) {\n        var E = function (A, o) {\n          return o ? o.querySelector(A) : document.querySelector(A);\n        }.call(this, A, o);\n\n        if (window.HTMLIFrameElement && E instanceof window.HTMLIFrameElement) try {\n          E = E.contentDocument.head;\n        } catch (A) {\n          E = null;\n        }\n        e[A] = E;\n      }\n\n      return e[A];\n    }),\n        n = null,\n        r = 0,\n        w = [],\n        c = E(8);\n\n    function f(A, o) {\n      for (var E = 0; E < A.length; E++) {\n        var B = A[E],\n            M = I[B.id];\n\n        if (M) {\n          M.refs++;\n\n          for (var e = 0; e < M.parts.length; e++) {\n            M.parts[e](B.parts[e]);\n          }\n\n          for (; e < B.parts.length; e++) {\n            M.parts.push(g(B.parts[e], o));\n          }\n        } else {\n          var t = [];\n\n          for (e = 0; e < B.parts.length; e++) {\n            t.push(g(B.parts[e], o));\n          }\n\n          I[B.id] = {\n            id: B.id,\n            refs: 1,\n            parts: t\n          };\n        }\n      }\n    }\n\n    function D(A, o) {\n      for (var E = [], B = {}, M = 0; M < A.length; M++) {\n        var e = A[M],\n            I = o.base ? e[0] + o.base : e[0],\n            t = {\n          css: e[1],\n          media: e[2],\n          sourceMap: e[3]\n        };\n        B[I] ? B[I].parts.push(t) : E.push(B[I] = {\n          id: I,\n          parts: [t]\n        });\n      }\n\n      return E;\n    }\n\n    function F(A, o) {\n      var E = Q(A.insertInto);\n      if (!E) throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n      var B = w[w.length - 1];\n      if ("top" === A.insertAt) B ? B.nextSibling ? E.insertBefore(o, B.nextSibling) : E.appendChild(o) : E.insertBefore(o, E.firstChild), w.push(o);else if ("bottom" === A.insertAt) E.appendChild(o);else {\n        if ("object" != _typeof(A.insertAt) || !A.insertAt.before) throw new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n        var M = Q(A.insertAt.before, E);\n        E.insertBefore(o, M);\n      }\n    }\n\n    function C(A) {\n      if (null === A.parentNode) return !1;\n      A.parentNode.removeChild(A);\n      var o = w.indexOf(A);\n      0 <= o && w.splice(o, 1);\n    }\n\n    function i(A) {\n      var o = document.createElement("style");\n\n      if (void 0 === A.attrs.type && (A.attrs.type = "text/css"), void 0 === A.attrs.nonce) {\n        var B = E.nc;\n        B && (A.attrs.nonce = B);\n      }\n\n      return s(o, A.attrs), F(A, o), o;\n    }\n\n    function s(A, o) {\n      Object.keys(o).forEach(function (E) {\n        A.setAttribute(E, o[E]);\n      });\n    }\n\n    function g(A, o) {\n      var E, B, M, e, I, t;\n\n      if (o.transform && A.css) {\n        if (!(e = "function" == typeof o.transform ? o.transform(A.css) : o.transform.default(A.css))) return function () {};\n        A.css = e;\n      }\n\n      if (o.singleton) {\n        var Q = r++;\n        E = n || (n = i(o)), B = R.bind(null, E, Q, !1), M = R.bind(null, E, Q, !0);\n      } else M = A.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (I = o, t = document.createElement("link"), void 0 === I.attrs.type && (I.attrs.type = "text/css"), I.attrs.rel = "stylesheet", s(t, I.attrs), F(I, t), B = function (A, o, E) {\n        var B = E.css,\n            M = E.sourceMap,\n            e = void 0 === o.convertToAbsoluteUrls && M;\n        (o.convertToAbsoluteUrls || e) && (B = c(B)), M && (B += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(M)))) + " */");\n        var I = new Blob([B], {\n          type: "text/css"\n        }),\n            t = A.href;\n        A.href = URL.createObjectURL(I), t && URL.revokeObjectURL(t);\n      }.bind(null, E = t, o), function () {\n        C(E), E.href && URL.revokeObjectURL(E.href);\n      }) : (E = i(o), B = function (A, o) {\n        var E = o.css,\n            B = o.media;\n        if (B && A.setAttribute("media", B), A.styleSheet) A.styleSheet.cssText = E;else {\n          for (; A.firstChild;) {\n            A.removeChild(A.firstChild);\n          }\n\n          A.appendChild(document.createTextNode(E));\n        }\n      }.bind(null, E), function () {\n        C(E);\n      });\n\n      return B(A), function (o) {\n        if (o) {\n          if (o.css === A.css && o.media === A.media && o.sourceMap === A.sourceMap) return;\n          B(A = o);\n        } else M();\n      };\n    }\n\n    A.exports = function (A, o) {\n      if ("undefined" != typeof DEBUG && DEBUG && "object" != (typeof document === "undefined" ? "undefined" : _typeof(document))) throw new Error("The style-loader cannot be used in a non-browser environment");\n      (o = o || {}).attrs = "object" == _typeof(o.attrs) ? o.attrs : {}, o.singleton || "boolean" == typeof o.singleton || (o.singleton = t()), o.insertInto || (o.insertInto = "head"), o.insertAt || (o.insertAt = "bottom");\n      var E = D(A, o);\n      return f(E, o), function (A) {\n        for (var B = [], M = 0; M < E.length; M++) {\n          var e = E[M];\n          (t = I[e.id]).refs--, B.push(t);\n        }\n\n        for (A && f(D(A, o), o), M = 0; M < B.length; M++) {\n          var t;\n\n          if (0 === (t = B[M]).refs) {\n            for (var Q = 0; Q < t.parts.length; Q++) {\n              t.parts[Q]();\n            }\n\n            delete I[t.id];\n          }\n        }\n      };\n    };\n\n    var a,\n        N = (a = [], function (A, o) {\n      return a[A] = o, a.filter(Boolean).join("\\n");\n    });\n\n    function R(A, o, E, B) {\n      var M = E ? "" : B.css;\n      if (A.styleSheet) A.styleSheet.cssText = N(o, M);else {\n        var e = document.createTextNode(M),\n            I = A.childNodes;\n        I[o] && A.removeChild(I[o]), I.length ? A.insertBefore(e, I[o]) : A.appendChild(e);\n      }\n    }\n  }, function (A, o) {\n    A.exports = function (A) {\n      var o = "undefined" != typeof window && window.location;\n      if (!o) throw new Error("fixUrls requires window.location");\n      if (!A || "string" != typeof A) return A;\n      var E = o.protocol + "//" + o.host,\n          B = E + o.pathname.replace(/\\/[^\\/]*$/, "/");\n      return A.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (A, o) {\n        var M,\n            e = o.trim().replace(/^"(.*)"$/, function (A, o) {\n          return o;\n        }).replace(/^\'(.*)\'$/, function (A, o) {\n          return o;\n        });\n        return /^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(e) ? A : (M = 0 === e.indexOf("//") ? e : 0 === e.indexOf("/") ? E + e : B + e.replace(/^\\.\\//, ""), "url(" + JSON.stringify(M) + ")");\n      });\n    };\n  }]);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ReactNumber.min.js\n')},"./example/index.js":
/*!**************************!*\
  !*** ./example/index.js ***!
  \**************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ReactNumber_min__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ReactNumber.min */ "./ReactNumber.min.js");\n/* harmony import */ var _ReactNumber_min__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ReactNumber_min__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.less */ "./example/index.less");\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo() {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this));\n    _this.state = {\n      number: 0\n    };\n    setInterval(function () {\n      _this.setState({\n        number: Math.floor(Math.random() * 192000) + 500\n      });\n    }, 1500);\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: "render",\n    value: function render() {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ReactNumber_min__WEBPACK_IMPORTED_MODULE_2___default.a, {\n        className: "my-class",\n        number: this.state.number,\n        showComma: true\n      });\n    }\n  }]);\n\n  return Demo;\n}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);\n\nvar page = document.createElement(\'div\');\ndocument.body.appendChild(page);\nObject(react_dom__WEBPACK_IMPORTED_MODULE_1__["render"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Demo, null), page);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4LmpzP2M1MTIiXSwibmFtZXMiOlsiRGVtbyIsInN0YXRlIiwibnVtYmVyIiwic2V0SW50ZXJ2YWwiLCJzZXRTdGF0ZSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIkNvbXBvbmVudCIsInBhZ2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJyZW5kZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFQTtBQUVBOztJQUVNQSxJOzs7OztBQUNGLGtCQUFjO0FBQUE7O0FBQUE7O0FBQ1Y7QUFFQSxVQUFLQyxLQUFMLEdBQWE7QUFDVEMsWUFBTSxFQUFFO0FBREMsS0FBYjtBQUlBQyxlQUFXLENBQUMsWUFBTTtBQUNkLFlBQUtDLFFBQUwsQ0FBYztBQUNWRixjQUFNLEVBQUVHLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsTUFBM0IsSUFBcUM7QUFEbkMsT0FBZDtBQUdILEtBSlUsRUFJUixJQUpRLENBQVg7QUFQVTtBQVliOzs7OzZCQUVRO0FBQ0wsYUFBTywyREFBQyx1REFBRDtBQUFhLGlCQUFTLEVBQUMsVUFBdkI7QUFBa0MsY0FBTSxFQUFFLEtBQUtOLEtBQUwsQ0FBV0MsTUFBckQ7QUFBNkQsaUJBQVMsRUFBRTtBQUF4RSxRQUFQO0FBQ0g7Ozs7RUFqQmNNLCtDOztBQW9CbkIsSUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBYjtBQUNBRCxRQUFRLENBQUNFLElBQVQsQ0FBY0MsV0FBZCxDQUEwQkosSUFBMUI7QUFFQUssd0RBQU0sQ0FBQywyREFBQyxJQUFELE9BQUQsRUFBV0wsSUFBWCxDQUFOIiwiZmlsZSI6Ii4vZXhhbXBsZS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuXG5pbXBvcnQgUmVhY3ROdW1iZXIgZnJvbSAnLi4vUmVhY3ROdW1iZXIubWluJztcblxuaW1wb3J0ICcuL2luZGV4Lmxlc3MnO1xuXG5jbGFzcyBEZW1vIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbnVtYmVyOiAwXG4gICAgICAgIH1cblxuICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBudW1iZXI6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE5MjAwMCkgKyA1MDBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCAxNTAwKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8UmVhY3ROdW1iZXIgY2xhc3NOYW1lPVwibXktY2xhc3NcIiBudW1iZXI9e3RoaXMuc3RhdGUubnVtYmVyfSBzaG93Q29tbWE9e3RydWV9IC8+O1xuICAgIH1cbn1cblxuY29uc3QgcGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYWdlKTtcblxucmVuZGVyKDxEZW1vIC8+LCBwYWdlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./example/index.js\n')},"./example/index.less":
/*!****************************!*\
  !*** ./example/index.less ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../node_modules/css-loader!../node_modules/less-loader/dist/cjs.js!./index.less */ "./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/ZTYxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLHdMQUE0Rjs7QUFFbEgsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLG1HQUFnRDs7QUFFckU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiLi9leGFtcGxlL2luZGV4Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4Lmxlc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./example/index.less\n')},"./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js!./example/index.less ***!
  \*********************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, "body {\\n  margin: 0;\\n}\\nbody .my-class {\\n  margin-top: 100px;\\n  justify-content: center;\\n  height: 200px;\\n  font-size: 160px;\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/MzYyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyw2RkFBNEM7QUFDL0U7OztBQUdBO0FBQ0EsY0FBYyxRQUFTLFNBQVMsY0FBYyxHQUFHLGtCQUFrQixzQkFBc0IsNEJBQTRCLGtCQUFrQixxQkFBcUIsR0FBRzs7QUFFL0oiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2V4YW1wbGUvaW5kZXgubGVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keSB7XFxuICBtYXJnaW46IDA7XFxufVxcbmJvZHkgLm15LWNsYXNzIHtcXG4gIG1hcmdpbi10b3A6IDEwMHB4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBoZWlnaHQ6IDIwMHB4O1xcbiAgZm9udC1zaXplOiAxNjBweDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less\n')}});